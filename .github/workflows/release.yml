name: Manual Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
      - name: Build Binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: target/${{ matrix.target }}/release/
          if-no-files-found: error
          retention-days: 1

  create-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the version from Cargo.toml
        id: cargo-version
        run: echo "PROJECT_VERSION=$(grep -m 1 '^version = ' Cargo.toml | sed 's/version = \"\(.*\)\"/\1/')" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*-binary'
          path: ./binaries

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: ${{ env.PROJECT_VERSION }}
          github_token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            # Changelog
            $(cat CHANGELOG.md)
          files:  binaries
          tag_name: ${{ env.PROJECT_VERSION }}
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}